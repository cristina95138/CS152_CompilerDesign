State 58 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: /* empty */
    3          | function functions

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: /* empty */
    6             | declaration SEMICOLON declarations

    7 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON INTEGER

   10 identifiers: IDENTIFIER
   11            | IDENTIFIER COMMA identifiers

   12 statements: statement SEMICOLON
   13           | statement SEMICOLON statements

   14 statement: /* empty */
   15          | var ASSIGN expressions
   16          | IF bool_expr THEN statements ENDIF
   17          | IF bool_expr THEN statements ELSE statements ENDIF
   18          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   19          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   20          | READ vars
   21          | WRITE vars
   22          | CONTINUE
   23          | RETURN expression

   24 vars: /* empty */
   25     | var
   26     | var COMMA vars

   27 var: IDENTIFIER
   28    | IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   29 bool_expr: relation_and_expr
   30          | relation_and_expr OR relation_and_expr

   31 relation_and_expr: relation_exprs
   32                  | relation_exprs AND relation_and_expr

   33 relation_exprs: relation_expr
   34               | NOT relation_expr

   35 relation_expr: expressions comp expressions
   36              | TRUE
   37              | FALSE
   38              | L_PAREN bool_expr R_PAREN

   39 comp: EQ
   40     | NEQ
   41     | LT
   42     | GT
   43     | LTE
   44     | GTE

   45 expressions: /* empty */
   46            | expression
   47            | expression COMMA expressions

   48 expression: multiplicative_expr
   49           | multiplicative_expr ADD expressions
   50           | multiplicative_expr SUB expressions

   51 multiplicative_expr: term
   52                    | term MULT multiplicative_expr
   53                    | term DIV multiplicative_expr
   54                    | term MOD multiplicative_expr

   55 terms: var
   56      | NUMBER
   57      | L_PAREN expression R_PAREN

   58 term: terms
   59     | SUB terms
   60     | IDENTIFIER L_PAREN expressions R_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
ARRAY (265) 8
ENUM (266) 7
OF (267) 8
IF (268) 16 17
THEN (269) 16 17
ENDIF (270) 16 17
ELSE (271) 17
WHILE (272) 18 19
DO (273) 19
BEGINLOOP (274) 18 19
ENDLOOP (275) 18 19
CONTINUE (276) 22
READ (277) 20
WRITE (278) 21
AND (279) 32
OR (280) 30
NOT (281) 34
TRUE (282) 36
FALSE (283) 37
RETURN (284) 23
SUB (285) 50 59
ADD (286) 49
MULT (287) 52
DIV (288) 53
MOD (289) 54
EQ (290) 39
NEQ (291) 40
LT (292) 41
GT (293) 42
LTE (294) 43
GTE (295) 44
SEMICOLON (296) 4 6 12 13
COLON (297) 7 8 9
COMMA (298) 11 26 47
L_PAREN (299) 7 38 57 60
R_PAREN (300) 7 38 57 60
L_SQUARE_BRACKET (301) 8 28
R_SQUARE_BRACKET (302) 8 28
ASSIGN (303) 15
NUMBER (304) 8 56
IDENTIFIER (305) 4 10 11 27 28 60
INTEGER (306) 8 9


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4, on right: 3
declarations (56)
    on left: 5 6, on right: 4 6
declaration (57)
    on left: 7 8 9, on right: 6
identifiers (58)
    on left: 10 11, on right: 7 8 9 11
statements (59)
    on left: 12 13, on right: 4 13 16 17 18 19
statement (60)
    on left: 14 15 16 17 18 19 20 21 22 23, on right: 12 13
vars (61)
    on left: 24 25 26, on right: 20 21 26
var (62)
    on left: 27 28, on right: 15 25 26 55
bool_expr (63)
    on left: 29 30, on right: 16 17 18 19 38
relation_and_expr (64)
    on left: 31 32, on right: 29 30 32
relation_exprs (65)
    on left: 33 34, on right: 31 32
relation_expr (66)
    on left: 35 36 37 38, on right: 33 34
comp (67)
    on left: 39 40 41 42 43 44, on right: 35
expressions (68)
    on left: 45 46 47, on right: 15 35 47 49 50 60
expression (69)
    on left: 48 49 50, on right: 23 28 46 47 57
multiplicative_expr (70)
    on left: 51 52 53 54, on right: 48 49 50 52 53 54
terms (71)
    on left: 55 56 57, on right: 58 59
term (72)
    on left: 58 59 60, on right: 51 52 53 54


state 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


state 1

    4 function: FUNCTION . IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENTIFIER  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: functions .

    $default  reduce using rule 1 (program)


state 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


state 5

    4 function: FUNCTION IDENTIFIER . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


state 8

    4 function: FUNCTION IDENTIFIER SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


state 9

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13


state 10

   10 identifiers: IDENTIFIER .
   11            | IDENTIFIER . COMMA identifiers

    COMMA  shift, and go to state 14

    $default  reduce using rule 10 (identifiers)


state 11

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


state 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


state 13

    7 declaration: identifiers . COLON ENUM L_PAREN identifiers R_PAREN
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers . COLON INTEGER

    COLON  shift, and go to state 17


state 14

   11 identifiers: IDENTIFIER COMMA . identifiers

    IDENTIFIER  shift, and go to state 10

    identifiers  go to state 18


state 15

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


state 16

    6 declarations: declaration SEMICOLON . declarations

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    identifiers   go to state 13


state 17

    7 declaration: identifiers COLON . ENUM L_PAREN identifiers R_PAREN
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON . INTEGER

    ARRAY    shift, and go to state 21
    ENUM     shift, and go to state 22
    INTEGER  shift, and go to state 23


state 18

   11 identifiers: IDENTIFIER COMMA identifiers .

    $default  reduce using rule 11 (identifiers)


state 19

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 24
    declaration   go to state 12
    identifiers   go to state 13


state 20

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


state 21

    8 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


state 22

    7 declaration: identifiers COLON ENUM . L_PAREN identifiers R_PAREN

    L_PAREN  shift, and go to state 26


state 23

    9 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 9 (declaration)


state 24

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 27


state 25

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 28


state 26

    7 declaration: identifiers COLON ENUM L_PAREN . identifiers R_PAREN

    IDENTIFIER  shift, and go to state 10

    identifiers  go to state 29


state 27

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 30


state 28

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 31


state 29

    7 declaration: identifiers COLON ENUM L_PAREN identifiers . R_PAREN

    R_PAREN  shift, and go to state 32


state 30

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    DO          shift, and go to state 35
    CONTINUE    shift, and go to state 36
    READ        shift, and go to state 37
    WRITE       shift, and go to state 38
    RETURN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40

    $default  reduce using rule 14 (statement)

    statements  go to state 41
    statement   go to state 42
    var         go to state 43


state 31

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 44


state 32

    7 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN .

    $default  reduce using rule 7 (declaration)


state 33

   16 statement: IF . bool_expr THEN statements ENDIF
   17          | IF . bool_expr THEN statements ELSE statements ENDIF

    NOT         shift, and go to state 45
    TRUE        shift, and go to state 46
    FALSE       shift, and go to state 47
    SUB         shift, and go to state 48
    L_PAREN     shift, and go to state 49
    NUMBER      shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 45 (expressions)

    var                  go to state 52
    bool_expr            go to state 53
    relation_and_expr    go to state 54
    relation_exprs       go to state 55
    relation_expr        go to state 56
    expressions          go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    terms                go to state 60
    term                 go to state 61


state 34

   18 statement: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    NOT         shift, and go to state 45
    TRUE        shift, and go to state 46
    FALSE       shift, and go to state 47
    SUB         shift, and go to state 48
    L_PAREN     shift, and go to state 49
    NUMBER      shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 45 (expressions)

    var                  go to state 52
    bool_expr            go to state 62
    relation_and_expr    go to state 54
    relation_exprs       go to state 55
    relation_expr        go to state 56
    expressions          go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    terms                go to state 60
    term                 go to state 61


state 35

   19 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 63


state 36

   22 statement: CONTINUE .

    $default  reduce using rule 22 (statement)


state 37

   20 statement: READ . vars

    IDENTIFIER  shift, and go to state 40

    $default  reduce using rule 24 (vars)

    vars  go to state 64
    var   go to state 65


state 38

   21 statement: WRITE . vars

    IDENTIFIER  shift, and go to state 40

    $default  reduce using rule 24 (vars)

    vars  go to state 66
    var   go to state 65


state 39

   23 statement: RETURN . expression

    SUB         shift, and go to state 48
    L_PAREN     shift, and go to state 67
    NUMBER      shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    var                  go to state 52
    expression           go to state 68
    multiplicative_expr  go to state 59
    terms                go to state 60
    term                 go to state 61


state 40

   27 var: IDENTIFIER .
   28    | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 69

    $default  reduce using rule 27 (var)


state 41

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 70


state 42

   12 statements: statement . SEMICOLON
   13           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 71


state 43

   15 statement: var . ASSIGN expressions

    ASSIGN  shift, and go to state 72


state 44

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 73


state 45

   34 relation_exprs: NOT . relation_expr

    TRUE        shift, and go to state 46
    FALSE       shift, and go to state 47
    SUB         shift, and go to state 48
    L_PAREN     shift, and go to state 49
    NUMBER      shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 45 (expressions)

    var                  go to state 52
    relation_expr        go to state 74
    expressions          go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    terms                go to state 60
    term                 go to state 61


state 46

   36 relation_expr: TRUE .

    $default  reduce using rule 36 (relation_expr)


state 47

   37 relation_expr: FALSE .

    $default  reduce using rule 37 (relation_expr)


state 48

   59 term: SUB . terms

    L_PAREN     shift, and go to state 67
    NUMBER      shift, and go to state 50
    IDENTIFIER  shift, and go to state 40

    var    go to state 52
    terms  go to state 75


state 49

   38 relation_expr: L_PAREN . bool_expr R_PAREN
   57 terms: L_PAREN . expression R_PAREN

    NOT         shift, and go to state 45
    TRUE        shift, and go to state 46
    FALSE       shift, and go to state 47
    SUB         shift, and go to state 48
    L_PAREN     shift, and go to state 49
    NUMBER      shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 45 (expressions)

    var                  go to state 52
    bool_expr            go to state 76
    relation_and_expr    go to state 54
    relation_exprs       go to state 55
    relation_expr        go to state 56
    expressions          go to state 57
    expression           go to state 77
    multiplicative_expr  go to state 59
    terms                go to state 60
    term                 go to state 61


state 50

   56 terms: NUMBER .

    $default  reduce using rule 56 (terms)


state 51

   27 var: IDENTIFIER .
   28    | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   60 term: IDENTIFIER . L_PAREN expressions R_PAREN

    L_PAREN           shift, and go to state 78
    L_SQUARE_BRACKET  shift, and go to state 69

    $default  reduce using rule 27 (var)


state 52

   55 terms: var .

    $default  reduce using rule 55 (terms)


state 53

   16 statement: IF bool_expr . THEN statements ENDIF
   17          | IF bool_expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 79


state 54

   29 bool_expr: relation_and_expr .
   30          | relation_and_expr . OR relation_and_expr

    OR  shift, and go to state 80

    $default  reduce using rule 29 (bool_expr)


state 55

   31 relation_and_expr: relation_exprs .
   32                  | relation_exprs . AND relation_and_expr

    AND  shift, and go to state 81

    $default  reduce using rule 31 (relation_and_expr)


state 56

   33 relation_exprs: relation_expr .

    $default  reduce using rule 33 (relation_exprs)


state 57

   35 relation_expr: expressions . comp expressions

    EQ   shift, and go to state 82
    NEQ  shift, and go to state 83
    LT   shift, and go to state 84
    GT   shift, and go to state 85
    LTE  shift, and go to state 86
    GTE  shift, and go to state 87

    comp  go to state 88


state 58

   46 expressions: expression .
   47            | expression . COMMA expressions

    COMMA  shift, and go to state 89

    COMMA     [reduce using rule 46 (expressions)]
    $default  reduce using rule 46 (expressions)


state 59

   48 expression: multiplicative_expr .
   49           | multiplicative_expr . ADD expressions
   50           | multiplicative_expr . SUB expressions

    SUB  shift, and go to state 90
    ADD  shift, and go to state 91

    $default  reduce using rule 48 (expression)


state 60

   58 term: terms .

    $default  reduce using rule 58 (term)


state 61

   51 multiplicative_expr: term .
   52                    | term . MULT multiplicative_expr
   53                    | term . DIV multiplicative_expr
   54                    | term . MOD multiplicative_expr

    MULT  shift, and go to state 92
    DIV   shift, and go to state 93
    MOD   shift, and go to state 94

    $default  reduce using rule 51 (multiplicative_expr)


state 62

   18 statement: WHILE bool_expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 95


state 63

   19 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    DO          shift, and go to state 35
    CONTINUE    shift, and go to state 36
    READ        shift, and go to state 37
    WRITE       shift, and go to state 38
    RETURN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40

    $default  reduce using rule 14 (statement)

    statements  go to state 96
    statement   go to state 42
    var         go to state 43


state 64

   20 statement: READ vars .

    $default  reduce using rule 20 (statement)


state 65

   25 vars: var .
   26     | var . COMMA vars

    COMMA  shift, and go to state 97

    $default  reduce using rule 25 (vars)


state 66

   21 statement: WRITE vars .

    $default  reduce using rule 21 (statement)


state 67

   57 terms: L_PAREN . expression R_PAREN

    SUB         shift, and go to state 48
    L_PAREN     shift, and go to state 67
    NUMBER      shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    var                  go to state 52
    expression           go to state 98
    multiplicative_expr  go to state 59
    terms                go to state 60
    term                 go to state 61


state 68

   23 statement: RETURN expression .

    $default  reduce using rule 23 (statement)


state 69

   28 var: IDENTIFIER L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB         shift, and go to state 48
    L_PAREN     shift, and go to state 67
    NUMBER      shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    var                  go to state 52
    expression           go to state 99
    multiplicative_expr  go to state 59
    terms                go to state 60
    term                 go to state 61


state 70

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


state 71

   12 statements: statement SEMICOLON .
   13           | statement SEMICOLON . statements

    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    DO          shift, and go to state 35
    CONTINUE    shift, and go to state 36
    READ        shift, and go to state 37
    WRITE       shift, and go to state 38
    RETURN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40

    SEMICOLON  reduce using rule 14 (statement)
    $default   reduce using rule 12 (statements)

    statements  go to state 100
    statement   go to state 42
    var         go to state 43


state 72

   15 statement: var ASSIGN . expressions

    SUB         shift, and go to state 48
    L_PAREN     shift, and go to state 67
    NUMBER      shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 45 (expressions)

    var                  go to state 52
    expressions          go to state 101
    expression           go to state 58
    multiplicative_expr  go to state 59
    terms                go to state 60
    term                 go to state 61


state 73

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


state 74

   34 relation_exprs: NOT relation_expr .

    $default  reduce using rule 34 (relation_exprs)


state 75

   59 term: SUB terms .

    $default  reduce using rule 59 (term)


state 76

   38 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 102


state 77

   46 expressions: expression .
   47            | expression . COMMA expressions
   57 terms: L_PAREN expression . R_PAREN

    COMMA    shift, and go to state 89
    R_PAREN  shift, and go to state 103

    $default  reduce using rule 46 (expressions)


state 78

   60 term: IDENTIFIER L_PAREN . expressions R_PAREN

    SUB         shift, and go to state 48
    L_PAREN     shift, and go to state 67
    NUMBER      shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 45 (expressions)

    var                  go to state 52
    expressions          go to state 104
    expression           go to state 58
    multiplicative_expr  go to state 59
    terms                go to state 60
    term                 go to state 61


state 79

   16 statement: IF bool_expr THEN . statements ENDIF
   17          | IF bool_expr THEN . statements ELSE statements ENDIF

    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    DO          shift, and go to state 35
    CONTINUE    shift, and go to state 36
    READ        shift, and go to state 37
    WRITE       shift, and go to state 38
    RETURN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40

    $default  reduce using rule 14 (statement)

    statements  go to state 105
    statement   go to state 42
    var         go to state 43


state 80

   30 bool_expr: relation_and_expr OR . relation_and_expr

    NOT         shift, and go to state 45
    TRUE        shift, and go to state 46
    FALSE       shift, and go to state 47
    SUB         shift, and go to state 48
    L_PAREN     shift, and go to state 49
    NUMBER      shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 45 (expressions)

    var                  go to state 52
    relation_and_expr    go to state 106
    relation_exprs       go to state 55
    relation_expr        go to state 56
    expressions          go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    terms                go to state 60
    term                 go to state 61


state 81

   32 relation_and_expr: relation_exprs AND . relation_and_expr

    NOT         shift, and go to state 45
    TRUE        shift, and go to state 46
    FALSE       shift, and go to state 47
    SUB         shift, and go to state 48
    L_PAREN     shift, and go to state 49
    NUMBER      shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 45 (expressions)

    var                  go to state 52
    relation_and_expr    go to state 107
    relation_exprs       go to state 55
    relation_expr        go to state 56
    expressions          go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    terms                go to state 60
    term                 go to state 61


state 82

   39 comp: EQ .

    $default  reduce using rule 39 (comp)


state 83

   40 comp: NEQ .

    $default  reduce using rule 40 (comp)


state 84

   41 comp: LT .

    $default  reduce using rule 41 (comp)


state 85

   42 comp: GT .

    $default  reduce using rule 42 (comp)


state 86

   43 comp: LTE .

    $default  reduce using rule 43 (comp)


state 87

   44 comp: GTE .

    $default  reduce using rule 44 (comp)


state 88

   35 relation_expr: expressions comp . expressions

    SUB         shift, and go to state 48
    L_PAREN     shift, and go to state 67
    NUMBER      shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 45 (expressions)

    var                  go to state 52
    expressions          go to state 108
    expression           go to state 58
    multiplicative_expr  go to state 59
    terms                go to state 60
    term                 go to state 61


state 89

   47 expressions: expression COMMA . expressions

    SUB         shift, and go to state 48
    L_PAREN     shift, and go to state 67
    NUMBER      shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 45 (expressions)

    var                  go to state 52
    expressions          go to state 109
    expression           go to state 58
    multiplicative_expr  go to state 59
    terms                go to state 60
    term                 go to state 61


state 90

   50 expression: multiplicative_expr SUB . expressions

    SUB         shift, and go to state 48
    L_PAREN     shift, and go to state 67
    NUMBER      shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 45 (expressions)

    var                  go to state 52
    expressions          go to state 110
    expression           go to state 58
    multiplicative_expr  go to state 59
    terms                go to state 60
    term                 go to state 61


state 91

   49 expression: multiplicative_expr ADD . expressions

    SUB         shift, and go to state 48
    L_PAREN     shift, and go to state 67
    NUMBER      shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 45 (expressions)

    var                  go to state 52
    expressions          go to state 111
    expression           go to state 58
    multiplicative_expr  go to state 59
    terms                go to state 60
    term                 go to state 61


state 92

   52 multiplicative_expr: term MULT . multiplicative_expr

    SUB         shift, and go to state 48
    L_PAREN     shift, and go to state 67
    NUMBER      shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    var                  go to state 52
    multiplicative_expr  go to state 112
    terms                go to state 60
    term                 go to state 61


state 93

   53 multiplicative_expr: term DIV . multiplicative_expr

    SUB         shift, and go to state 48
    L_PAREN     shift, and go to state 67
    NUMBER      shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    var                  go to state 52
    multiplicative_expr  go to state 113
    terms                go to state 60
    term                 go to state 61


state 94

   54 multiplicative_expr: term MOD . multiplicative_expr

    SUB         shift, and go to state 48
    L_PAREN     shift, and go to state 67
    NUMBER      shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    var                  go to state 52
    multiplicative_expr  go to state 114
    terms                go to state 60
    term                 go to state 61


state 95

   18 statement: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    DO          shift, and go to state 35
    CONTINUE    shift, and go to state 36
    READ        shift, and go to state 37
    WRITE       shift, and go to state 38
    RETURN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40

    $default  reduce using rule 14 (statement)

    statements  go to state 115
    statement   go to state 42
    var         go to state 43


state 96

   19 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 116


state 97

   26 vars: var COMMA . vars

    IDENTIFIER  shift, and go to state 40

    $default  reduce using rule 24 (vars)

    vars  go to state 117
    var   go to state 65


state 98

   57 terms: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 103


state 99

   28 var: IDENTIFIER L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 118


state 100

   13 statements: statement SEMICOLON statements .

    $default  reduce using rule 13 (statements)


state 101

   15 statement: var ASSIGN expressions .

    $default  reduce using rule 15 (statement)


state 102

   38 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 38 (relation_expr)


state 103

   57 terms: L_PAREN expression R_PAREN .

    $default  reduce using rule 57 (terms)


state 104

   60 term: IDENTIFIER L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 119


state 105

   16 statement: IF bool_expr THEN statements . ENDIF
   17          | IF bool_expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 120
    ELSE   shift, and go to state 121


state 106

   30 bool_expr: relation_and_expr OR relation_and_expr .

    $default  reduce using rule 30 (bool_expr)


state 107

   32 relation_and_expr: relation_exprs AND relation_and_expr .

    $default  reduce using rule 32 (relation_and_expr)


state 108

   35 relation_expr: expressions comp expressions .

    $default  reduce using rule 35 (relation_expr)


state 109

   47 expressions: expression COMMA expressions .

    $default  reduce using rule 47 (expressions)


state 110

   50 expression: multiplicative_expr SUB expressions .

    $default  reduce using rule 50 (expression)


state 111

   49 expression: multiplicative_expr ADD expressions .

    $default  reduce using rule 49 (expression)


state 112

   52 multiplicative_expr: term MULT multiplicative_expr .

    $default  reduce using rule 52 (multiplicative_expr)


state 113

   53 multiplicative_expr: term DIV multiplicative_expr .

    $default  reduce using rule 53 (multiplicative_expr)


state 114

   54 multiplicative_expr: term MOD multiplicative_expr .

    $default  reduce using rule 54 (multiplicative_expr)


state 115

   18 statement: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 122


state 116

   19 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 123


state 117

   26 vars: var COMMA vars .

    $default  reduce using rule 26 (vars)


state 118

   28 var: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 28 (var)


state 119

   60 term: IDENTIFIER L_PAREN expressions R_PAREN .

    $default  reduce using rule 60 (term)


state 120

   16 statement: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 16 (statement)


state 121

   17 statement: IF bool_expr THEN statements ELSE . statements ENDIF

    IF          shift, and go to state 33
    WHILE       shift, and go to state 34
    DO          shift, and go to state 35
    CONTINUE    shift, and go to state 36
    READ        shift, and go to state 37
    WRITE       shift, and go to state 38
    RETURN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40

    $default  reduce using rule 14 (statement)

    statements  go to state 124
    statement   go to state 42
    var         go to state 43


state 122

   18 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 18 (statement)


state 123

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    NOT         shift, and go to state 45
    TRUE        shift, and go to state 46
    FALSE       shift, and go to state 47
    SUB         shift, and go to state 48
    L_PAREN     shift, and go to state 49
    NUMBER      shift, and go to state 50
    IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 45 (expressions)

    var                  go to state 52
    bool_expr            go to state 125
    relation_and_expr    go to state 54
    relation_exprs       go to state 55
    relation_expr        go to state 56
    expressions          go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    terms                go to state 60
    term                 go to state 61


state 124

   17 statement: IF bool_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 126


state 125

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 19 (statement)


state 126

   17 statement: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 17 (statement)
