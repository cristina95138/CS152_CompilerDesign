Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: /* empty */
    3          | function functions

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: /* empty */
    6             | declaration SEMICOLON declarations

    7 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON INTEGER

   10 identifiers: /* empty */
   11            | IDENTIFIER identifiers
   12            | COMMA IDENTIFIER identifiers

   13 statements: /* empty */
   14           | statement SEMICOLON statements

   15 statement: var ASSIGN expression
   16          | IF bool_expr THEN stmt_loop ENDIF
   17          | IF bool_expr THEN stmt_loop ELSE stmt_loop ENDIF
   18          | WHILE bool_expr BEGINLOOP stmt_loop ENDLOOP
   19          | DO BEGINLOOP stmt_loop ENDLOOP WHILE bool_expr
   20          | READ vars
   21          | WRITE vars
   22          | CONTINUE
   23          | RETURN expression

   24 stmt_loop: statement SEMICOLON
   25          | stmt_loop statement SEMICOLON

   26 vars: /* empty */
   27     | var
   28     | var COMMA vars

   29 var: IDENTIFIER
   30    | IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   31 bool_expr: relation_and_expr
   32          | bool_expr OR relation_and_expr

   33 relation_and_expr: relation_expr
   34                  | relation_and_expr AND relation_expr

   35 relation_exprs: expression comp expression
   36               | TRUE
   37               | FALSE
   38               | L_PAREN bool_expr R_PAREN

   39 relation_expr: relation_exprs
   40              | NOT relation_exprs

   41 comp: EQ
   42     | NEQ
   43     | LT
   44     | GT
   45     | LTE
   46     | GTE

   47 expressions: /* empty */
   48            | expression
   49            | expression COMMA expressions

   50 expression: multiplicative_expr
   51           | ADD multiplicative_expr expression
   52           | SUB multiplicative_expr expression

   53 multiplicative_expr: term
   54                    | MULT term multiplicative_expr
   55                    | DIV term multiplicative_expr
   56                    | MOD term multiplicative_expr

   57 terms: var
   58      | NUMBER
   59      | L_PAREN expressions R_PAREN

   60 term: var
   61     | SUB terms
   62     | IDENTIFIER L_PAREN expressions R_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
ARRAY (265) 8
ENUM (266) 7
OF (267) 8
IF (268) 16 17
THEN (269) 16 17
ENDIF (270) 16 17
ELSE (271) 17
WHILE (272) 18 19
DO (273) 19
BEGINLOOP (274) 18 19
ENDLOOP (275) 18 19
CONTINUE (276) 22
READ (277) 20
WRITE (278) 21
AND (279) 34
OR (280) 32
NOT (281) 40
TRUE (282) 36
FALSE (283) 37
RETURN (284) 23
SUB (285) 52 61
ADD (286) 51
MULT (287) 54
DIV (288) 55
MOD (289) 56
EQ (290) 41
NEQ (291) 42
LT (292) 43
GT (293) 44
LTE (294) 45
GTE (295) 46
SEMICOLON (296) 4 6 14 24 25
COLON (297) 7 8 9
COMMA (298) 12 28 49
L_PAREN (299) 7 38 59 62
R_PAREN (300) 7 38 59 62
L_SQUARE_BRACKET (301) 8 30
R_SQUARE_BRACKET (302) 8 30
ASSIGN (303) 15
NUMBER (304) 8 58
IDENTIFIER (305) 4 11 12 29 30 62
INTEGER (306) 7 8 9


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4, on right: 3
declarations (56)
    on left: 5 6, on right: 4 6
declaration (57)
    on left: 7 8 9, on right: 6
identifiers (58)
    on left: 10 11 12, on right: 7 8 9 11 12
statements (59)
    on left: 13 14, on right: 4 14
statement (60)
    on left: 15 16 17 18 19 20 21 22 23, on right: 14 24 25
stmt_loop (61)
    on left: 24 25, on right: 16 17 18 19 25
vars (62)
    on left: 26 27 28, on right: 20 21 28
var (63)
    on left: 29 30, on right: 15 27 28 57 60
bool_expr (64)
    on left: 31 32, on right: 16 17 18 19 32 38
relation_and_expr (65)
    on left: 33 34, on right: 31 32 34
relation_exprs (66)
    on left: 35 36 37 38, on right: 39 40
relation_expr (67)
    on left: 39 40, on right: 33 34
comp (68)
    on left: 41 42 43 44 45 46, on right: 35
expressions (69)
    on left: 47 48 49, on right: 49 59 62
expression (70)
    on left: 50 51 52, on right: 15 23 30 35 48 49 51 52
multiplicative_expr (71)
    on left: 53 54 55 56, on right: 50 51 52 54 55 56
terms (72)
    on left: 57 58 59, on right: 61
term (73)
    on left: 60 61 62, on right: 53 54 55 56


state 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


state 1

    4 function: FUNCTION . IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENTIFIER  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: functions .

    $default  reduce using rule 1 (program)


state 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


state 5

    4 function: FUNCTION IDENTIFIER . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


state 8

    4 function: FUNCTION IDENTIFIER SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


state 9

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    COMMA       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    COLON     reduce using rule 10 (identifiers)
    $default  reduce using rule 5 (declarations)

    declarations  go to state 12
    declaration   go to state 13
    identifiers   go to state 14


state 10

   12 identifiers: COMMA . IDENTIFIER identifiers

    IDENTIFIER  shift, and go to state 15


state 11

   11 identifiers: IDENTIFIER . identifiers

    COMMA       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 10 (identifiers)

    identifiers  go to state 16


state 12

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 17


state 13

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 18


state 14

    7 declaration: identifiers . COLON ENUM L_PAREN identifiers R_PAREN INTEGER
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers . COLON INTEGER

    COLON  shift, and go to state 19


state 15

   12 identifiers: COMMA IDENTIFIER . identifiers

    COMMA       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 10 (identifiers)

    identifiers  go to state 20


state 16

   11 identifiers: IDENTIFIER identifiers .

    $default  reduce using rule 11 (identifiers)


state 17

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 21


state 18

    6 declarations: declaration SEMICOLON . declarations

    COMMA       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    COLON     reduce using rule 10 (identifiers)
    $default  reduce using rule 5 (declarations)

    declarations  go to state 22
    declaration   go to state 13
    identifiers   go to state 14


state 19

    7 declaration: identifiers COLON . ENUM L_PAREN identifiers R_PAREN INTEGER
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON . INTEGER

    ARRAY    shift, and go to state 23
    ENUM     shift, and go to state 24
    INTEGER  shift, and go to state 25


state 20

   12 identifiers: COMMA IDENTIFIER identifiers .

    $default  reduce using rule 12 (identifiers)


state 21

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    COMMA       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    COLON     reduce using rule 10 (identifiers)
    $default  reduce using rule 5 (declarations)

    declarations  go to state 26
    declaration   go to state 13
    identifiers   go to state 14


state 22

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


state 23

    8 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


state 24

    7 declaration: identifiers COLON ENUM . L_PAREN identifiers R_PAREN INTEGER

    L_PAREN  shift, and go to state 28


state 25

    9 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 9 (declaration)


state 26

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 29


state 27

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 30


state 28

    7 declaration: identifiers COLON ENUM L_PAREN . identifiers R_PAREN INTEGER

    COMMA       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 10 (identifiers)

    identifiers  go to state 31


state 29

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 32


state 30

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 33


state 31

    7 declaration: identifiers COLON ENUM L_PAREN identifiers . R_PAREN INTEGER

    R_PAREN  shift, and go to state 34


state 32

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    $default  reduce using rule 13 (statements)

    statements  go to state 43
    statement   go to state 44
    var         go to state 45


state 33

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 46


state 34

    7 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN . INTEGER

    INTEGER  shift, and go to state 47


state 35

   16 statement: IF . bool_expr THEN stmt_loop ENDIF
   17          | IF . bool_expr THEN stmt_loop ELSE stmt_loop ENDIF

    NOT         shift, and go to state 48
    TRUE        shift, and go to state 49
    FALSE       shift, and go to state 50
    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 56
    IDENTIFIER  shift, and go to state 57

    var                  go to state 58
    bool_expr            go to state 59
    relation_and_expr    go to state 60
    relation_exprs       go to state 61
    relation_expr        go to state 62
    expression           go to state 63
    multiplicative_expr  go to state 64
    term                 go to state 65


state 36

   18 statement: WHILE . bool_expr BEGINLOOP stmt_loop ENDLOOP

    NOT         shift, and go to state 48
    TRUE        shift, and go to state 49
    FALSE       shift, and go to state 50
    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 56
    IDENTIFIER  shift, and go to state 57

    var                  go to state 58
    bool_expr            go to state 66
    relation_and_expr    go to state 60
    relation_exprs       go to state 61
    relation_expr        go to state 62
    expression           go to state 63
    multiplicative_expr  go to state 64
    term                 go to state 65


state 37

   19 statement: DO . BEGINLOOP stmt_loop ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 67


state 38

   22 statement: CONTINUE .

    $default  reduce using rule 22 (statement)


state 39

   20 statement: READ . vars

    IDENTIFIER  shift, and go to state 42

    $default  reduce using rule 26 (vars)

    vars  go to state 68
    var   go to state 69


state 40

   21 statement: WRITE . vars

    IDENTIFIER  shift, and go to state 42

    $default  reduce using rule 26 (vars)

    vars  go to state 70
    var   go to state 69


state 41

   23 statement: RETURN . expression

    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    IDENTIFIER  shift, and go to state 57

    var                  go to state 58
    expression           go to state 71
    multiplicative_expr  go to state 64
    term                 go to state 65


state 42

   29 var: IDENTIFIER .
   30    | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 72

    $default  reduce using rule 29 (var)


state 43

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 73


state 44

   14 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 74


state 45

   15 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 75


state 46

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 76


state 47

    7 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN INTEGER .

    $default  reduce using rule 7 (declaration)


state 48

   40 relation_expr: NOT . relation_exprs

    TRUE        shift, and go to state 49
    FALSE       shift, and go to state 50
    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 56
    IDENTIFIER  shift, and go to state 57

    var                  go to state 58
    relation_exprs       go to state 77
    expression           go to state 63
    multiplicative_expr  go to state 64
    term                 go to state 65


state 49

   36 relation_exprs: TRUE .

    $default  reduce using rule 36 (relation_exprs)


state 50

   37 relation_exprs: FALSE .

    $default  reduce using rule 37 (relation_exprs)


state 51

   52 expression: SUB . multiplicative_expr expression
   61 term: SUB . terms

    SUB         shift, and go to state 78
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 79
    NUMBER      shift, and go to state 80
    IDENTIFIER  shift, and go to state 57

    var                  go to state 81
    multiplicative_expr  go to state 82
    terms                go to state 83
    term                 go to state 65


state 52

   51 expression: ADD . multiplicative_expr expression

    SUB         shift, and go to state 78
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    IDENTIFIER  shift, and go to state 57

    var                  go to state 58
    multiplicative_expr  go to state 84
    term                 go to state 65


state 53

   54 multiplicative_expr: MULT . term multiplicative_expr

    SUB         shift, and go to state 78
    IDENTIFIER  shift, and go to state 57

    var   go to state 58
    term  go to state 85


state 54

   55 multiplicative_expr: DIV . term multiplicative_expr

    SUB         shift, and go to state 78
    IDENTIFIER  shift, and go to state 57

    var   go to state 58
    term  go to state 86


state 55

   56 multiplicative_expr: MOD . term multiplicative_expr

    SUB         shift, and go to state 78
    IDENTIFIER  shift, and go to state 57

    var   go to state 58
    term  go to state 87


state 56

   38 relation_exprs: L_PAREN . bool_expr R_PAREN

    NOT         shift, and go to state 48
    TRUE        shift, and go to state 49
    FALSE       shift, and go to state 50
    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 56
    IDENTIFIER  shift, and go to state 57

    var                  go to state 58
    bool_expr            go to state 88
    relation_and_expr    go to state 60
    relation_exprs       go to state 61
    relation_expr        go to state 62
    expression           go to state 63
    multiplicative_expr  go to state 64
    term                 go to state 65


state 57

   29 var: IDENTIFIER .
   30    | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   62 term: IDENTIFIER . L_PAREN expressions R_PAREN

    L_PAREN           shift, and go to state 89
    L_SQUARE_BRACKET  shift, and go to state 72

    $default  reduce using rule 29 (var)


state 58

   60 term: var .

    $default  reduce using rule 60 (term)


state 59

   16 statement: IF bool_expr . THEN stmt_loop ENDIF
   17          | IF bool_expr . THEN stmt_loop ELSE stmt_loop ENDIF
   32 bool_expr: bool_expr . OR relation_and_expr

    THEN  shift, and go to state 90
    OR    shift, and go to state 91


state 60

   31 bool_expr: relation_and_expr .
   34 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 92

    $default  reduce using rule 31 (bool_expr)


state 61

   39 relation_expr: relation_exprs .

    $default  reduce using rule 39 (relation_expr)


state 62

   33 relation_and_expr: relation_expr .

    $default  reduce using rule 33 (relation_and_expr)


state 63

   35 relation_exprs: expression . comp expression

    EQ   shift, and go to state 93
    NEQ  shift, and go to state 94
    LT   shift, and go to state 95
    GT   shift, and go to state 96
    LTE  shift, and go to state 97
    GTE  shift, and go to state 98

    comp  go to state 99


state 64

   50 expression: multiplicative_expr .

    $default  reduce using rule 50 (expression)


state 65

   53 multiplicative_expr: term .

    $default  reduce using rule 53 (multiplicative_expr)


state 66

   18 statement: WHILE bool_expr . BEGINLOOP stmt_loop ENDLOOP
   32 bool_expr: bool_expr . OR relation_and_expr

    BEGINLOOP  shift, and go to state 100
    OR         shift, and go to state 91


state 67

   19 statement: DO BEGINLOOP . stmt_loop ENDLOOP WHILE bool_expr

    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    statement  go to state 101
    stmt_loop  go to state 102
    var        go to state 45


state 68

   20 statement: READ vars .

    $default  reduce using rule 20 (statement)


state 69

   27 vars: var .
   28     | var . COMMA vars

    COMMA  shift, and go to state 103

    $default  reduce using rule 27 (vars)


state 70

   21 statement: WRITE vars .

    $default  reduce using rule 21 (statement)


state 71

   23 statement: RETURN expression .

    $default  reduce using rule 23 (statement)


state 72

   30 var: IDENTIFIER L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    IDENTIFIER  shift, and go to state 57

    var                  go to state 58
    expression           go to state 104
    multiplicative_expr  go to state 64
    term                 go to state 65


state 73

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


state 74

   14 statements: statement SEMICOLON . statements

    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    $default  reduce using rule 13 (statements)

    statements  go to state 105
    statement   go to state 44
    var         go to state 45


state 75

   15 statement: var ASSIGN . expression

    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    IDENTIFIER  shift, and go to state 57

    var                  go to state 58
    expression           go to state 106
    multiplicative_expr  go to state 64
    term                 go to state 65


state 76

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


state 77

   40 relation_expr: NOT relation_exprs .

    $default  reduce using rule 40 (relation_expr)


state 78

   61 term: SUB . terms

    L_PAREN     shift, and go to state 79
    NUMBER      shift, and go to state 80
    IDENTIFIER  shift, and go to state 42

    var    go to state 107
    terms  go to state 83


state 79

   59 terms: L_PAREN . expressions R_PAREN

    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 47 (expressions)

    var                  go to state 58
    expressions          go to state 108
    expression           go to state 109
    multiplicative_expr  go to state 64
    term                 go to state 65


state 80

   58 terms: NUMBER .

    $default  reduce using rule 58 (terms)


state 81

   57 terms: var .
   60 term: var .

    SUB         reduce using rule 60 (term)
    ADD         reduce using rule 60 (term)
    MULT        reduce using rule 60 (term)
    DIV         reduce using rule 60 (term)
    MOD         reduce using rule 60 (term)
    IDENTIFIER  reduce using rule 60 (term)
    $default    reduce using rule 57 (terms)


state 82

   52 expression: SUB multiplicative_expr . expression

    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    IDENTIFIER  shift, and go to state 57

    var                  go to state 58
    expression           go to state 110
    multiplicative_expr  go to state 64
    term                 go to state 65


state 83

   61 term: SUB terms .

    $default  reduce using rule 61 (term)


state 84

   51 expression: ADD multiplicative_expr . expression

    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    IDENTIFIER  shift, and go to state 57

    var                  go to state 58
    expression           go to state 111
    multiplicative_expr  go to state 64
    term                 go to state 65


state 85

   54 multiplicative_expr: MULT term . multiplicative_expr

    SUB         shift, and go to state 78
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    IDENTIFIER  shift, and go to state 57

    var                  go to state 58
    multiplicative_expr  go to state 112
    term                 go to state 65


state 86

   55 multiplicative_expr: DIV term . multiplicative_expr

    SUB         shift, and go to state 78
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    IDENTIFIER  shift, and go to state 57

    var                  go to state 58
    multiplicative_expr  go to state 113
    term                 go to state 65


state 87

   56 multiplicative_expr: MOD term . multiplicative_expr

    SUB         shift, and go to state 78
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    IDENTIFIER  shift, and go to state 57

    var                  go to state 58
    multiplicative_expr  go to state 114
    term                 go to state 65


state 88

   32 bool_expr: bool_expr . OR relation_and_expr
   38 relation_exprs: L_PAREN bool_expr . R_PAREN

    OR       shift, and go to state 91
    R_PAREN  shift, and go to state 115


state 89

   62 term: IDENTIFIER L_PAREN . expressions R_PAREN

    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 47 (expressions)

    var                  go to state 58
    expressions          go to state 116
    expression           go to state 109
    multiplicative_expr  go to state 64
    term                 go to state 65


state 90

   16 statement: IF bool_expr THEN . stmt_loop ENDIF
   17          | IF bool_expr THEN . stmt_loop ELSE stmt_loop ENDIF

    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    statement  go to state 101
    stmt_loop  go to state 117
    var        go to state 45


state 91

   32 bool_expr: bool_expr OR . relation_and_expr

    NOT         shift, and go to state 48
    TRUE        shift, and go to state 49
    FALSE       shift, and go to state 50
    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 56
    IDENTIFIER  shift, and go to state 57

    var                  go to state 58
    relation_and_expr    go to state 118
    relation_exprs       go to state 61
    relation_expr        go to state 62
    expression           go to state 63
    multiplicative_expr  go to state 64
    term                 go to state 65


state 92

   34 relation_and_expr: relation_and_expr AND . relation_expr

    NOT         shift, and go to state 48
    TRUE        shift, and go to state 49
    FALSE       shift, and go to state 50
    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 56
    IDENTIFIER  shift, and go to state 57

    var                  go to state 58
    relation_exprs       go to state 61
    relation_expr        go to state 119
    expression           go to state 63
    multiplicative_expr  go to state 64
    term                 go to state 65


state 93

   41 comp: EQ .

    $default  reduce using rule 41 (comp)


state 94

   42 comp: NEQ .

    $default  reduce using rule 42 (comp)


state 95

   43 comp: LT .

    $default  reduce using rule 43 (comp)


state 96

   44 comp: GT .

    $default  reduce using rule 44 (comp)


state 97

   45 comp: LTE .

    $default  reduce using rule 45 (comp)


state 98

   46 comp: GTE .

    $default  reduce using rule 46 (comp)


state 99

   35 relation_exprs: expression comp . expression

    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    IDENTIFIER  shift, and go to state 57

    var                  go to state 58
    expression           go to state 120
    multiplicative_expr  go to state 64
    term                 go to state 65


state 100

   18 statement: WHILE bool_expr BEGINLOOP . stmt_loop ENDLOOP

    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    statement  go to state 101
    stmt_loop  go to state 121
    var        go to state 45


state 101

   24 stmt_loop: statement . SEMICOLON

    SEMICOLON  shift, and go to state 122


state 102

   19 statement: DO BEGINLOOP stmt_loop . ENDLOOP WHILE bool_expr
   25 stmt_loop: stmt_loop . statement SEMICOLON

    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    ENDLOOP     shift, and go to state 123
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    statement  go to state 124
    var        go to state 45


state 103

   28 vars: var COMMA . vars

    IDENTIFIER  shift, and go to state 42

    $default  reduce using rule 26 (vars)

    vars  go to state 125
    var   go to state 69


state 104

   30 var: IDENTIFIER L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 126


state 105

   14 statements: statement SEMICOLON statements .

    $default  reduce using rule 14 (statements)


state 106

   15 statement: var ASSIGN expression .

    $default  reduce using rule 15 (statement)


state 107

   57 terms: var .

    $default  reduce using rule 57 (terms)


state 108

   59 terms: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 127


state 109

   48 expressions: expression .
   49            | expression . COMMA expressions

    COMMA  shift, and go to state 128

    $default  reduce using rule 48 (expressions)


state 110

   52 expression: SUB multiplicative_expr expression .

    $default  reduce using rule 52 (expression)


state 111

   51 expression: ADD multiplicative_expr expression .

    $default  reduce using rule 51 (expression)


state 112

   54 multiplicative_expr: MULT term multiplicative_expr .

    $default  reduce using rule 54 (multiplicative_expr)


state 113

   55 multiplicative_expr: DIV term multiplicative_expr .

    $default  reduce using rule 55 (multiplicative_expr)


state 114

   56 multiplicative_expr: MOD term multiplicative_expr .

    $default  reduce using rule 56 (multiplicative_expr)


state 115

   38 relation_exprs: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 38 (relation_exprs)


state 116

   62 term: IDENTIFIER L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 129


state 117

   16 statement: IF bool_expr THEN stmt_loop . ENDIF
   17          | IF bool_expr THEN stmt_loop . ELSE stmt_loop ENDIF
   25 stmt_loop: stmt_loop . statement SEMICOLON

    IF          shift, and go to state 35
    ENDIF       shift, and go to state 130
    ELSE        shift, and go to state 131
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    statement  go to state 124
    var        go to state 45


state 118

   32 bool_expr: bool_expr OR relation_and_expr .
   34 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 92

    $default  reduce using rule 32 (bool_expr)


state 119

   34 relation_and_expr: relation_and_expr AND relation_expr .

    $default  reduce using rule 34 (relation_and_expr)


state 120

   35 relation_exprs: expression comp expression .

    $default  reduce using rule 35 (relation_exprs)


state 121

   18 statement: WHILE bool_expr BEGINLOOP stmt_loop . ENDLOOP
   25 stmt_loop: stmt_loop . statement SEMICOLON

    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    ENDLOOP     shift, and go to state 132
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    statement  go to state 124
    var        go to state 45


state 122

   24 stmt_loop: statement SEMICOLON .

    $default  reduce using rule 24 (stmt_loop)


state 123

   19 statement: DO BEGINLOOP stmt_loop ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 133


state 124

   25 stmt_loop: stmt_loop statement . SEMICOLON

    SEMICOLON  shift, and go to state 134


state 125

   28 vars: var COMMA vars .

    $default  reduce using rule 28 (vars)


state 126

   30 var: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 30 (var)


state 127

   59 terms: L_PAREN expressions R_PAREN .

    $default  reduce using rule 59 (terms)


state 128

   49 expressions: expression COMMA . expressions

    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 47 (expressions)

    var                  go to state 58
    expressions          go to state 135
    expression           go to state 109
    multiplicative_expr  go to state 64
    term                 go to state 65


state 129

   62 term: IDENTIFIER L_PAREN expressions R_PAREN .

    $default  reduce using rule 62 (term)


state 130

   16 statement: IF bool_expr THEN stmt_loop ENDIF .

    $default  reduce using rule 16 (statement)


state 131

   17 statement: IF bool_expr THEN stmt_loop ELSE . stmt_loop ENDIF

    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    statement  go to state 101
    stmt_loop  go to state 136
    var        go to state 45


state 132

   18 statement: WHILE bool_expr BEGINLOOP stmt_loop ENDLOOP .

    $default  reduce using rule 18 (statement)


state 133

   19 statement: DO BEGINLOOP stmt_loop ENDLOOP WHILE . bool_expr

    NOT         shift, and go to state 48
    TRUE        shift, and go to state 49
    FALSE       shift, and go to state 50
    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 56
    IDENTIFIER  shift, and go to state 57

    var                  go to state 58
    bool_expr            go to state 137
    relation_and_expr    go to state 60
    relation_exprs       go to state 61
    relation_expr        go to state 62
    expression           go to state 63
    multiplicative_expr  go to state 64
    term                 go to state 65


state 134

   25 stmt_loop: stmt_loop statement SEMICOLON .

    $default  reduce using rule 25 (stmt_loop)


state 135

   49 expressions: expression COMMA expressions .

    $default  reduce using rule 49 (expressions)


state 136

   17 statement: IF bool_expr THEN stmt_loop ELSE stmt_loop . ENDIF
   25 stmt_loop: stmt_loop . statement SEMICOLON

    IF          shift, and go to state 35
    ENDIF       shift, and go to state 138
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    statement  go to state 124
    var        go to state 45


state 137

   19 statement: DO BEGINLOOP stmt_loop ENDLOOP WHILE bool_expr .
   32 bool_expr: bool_expr . OR relation_and_expr

    OR  shift, and go to state 91

    $default  reduce using rule 19 (statement)


state 138

   17 statement: IF bool_expr THEN stmt_loop ELSE stmt_loop ENDIF .

    $default  reduce using rule 17 (statement)
