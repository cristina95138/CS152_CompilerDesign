State 60 conflicts: 1 shift/reduce
State 87 conflicts: 8 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: /* empty */
    3          | function functions

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: /* empty */
    6             | declaration SEMICOLON declarations

    7 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON INTEGER

   10 identifiers: /* empty */
   11            | IDENTIFIER identifiers
   12            | COMMA IDENTIFIER identifiers

   13 statements: /* empty */
   14           | statement SEMICOLON statements

   15 statement: /* empty */
   16          | var ASSIGN expression
   17          | IF bool_expr THEN statements ENDIF
   18          | IF bool_expr THEN statements ELSE statements ENDIF
   19          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   20          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   21          | READ vars
   22          | WRITE vars
   23          | CONTINUE
   24          | RETURN expression

   25 vars: /* empty */
   26     | var
   27     | var COMMA vars

   28 var: IDENTIFIER
   29    | IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   30 bool_expr: relation_and_expr
   31          | OR relation_and_expr bool_expr

   32 relation_and_expr: relation_expr
   33                  | AND relation_expr relation_and_expr

   34 relation_exprs: expression comp expression
   35               | TRUE
   36               | FALSE
   37               | L_PAREN bool_expr R_PAREN

   38 relation_expr: relation_exprs
   39              | NOT relation_exprs

   40 comp: EQ
   41     | NEQ
   42     | LT
   43     | GT
   44     | LTE
   45     | GTE

   46 expressions: /* empty */
   47            | expression
   48            | expression COMMA expressions

   49 expression: multiplicative_expr
   50           | ADD multiplicative_expr expression
   51           | SUB multiplicative_expr expression

   52 multiplicative_expr: term
   53                    | MULT term multiplicative_expr
   54                    | DIV term multiplicative_expr
   55                    | MOD term multiplicative_expr

   56 terms: var
   57      | NUMBER
   58      | L_PAREN expressions R_PAREN

   59 term: terms
   60     | SUB terms
   61     | IDENTIFIER L_PAREN expressions R_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
ARRAY (265) 8
ENUM (266) 7
OF (267) 8
IF (268) 17 18
THEN (269) 17 18
ENDIF (270) 17 18
ELSE (271) 18
WHILE (272) 19 20
DO (273) 20
BEGINLOOP (274) 19 20
ENDLOOP (275) 19 20
CONTINUE (276) 23
READ (277) 21
WRITE (278) 22
AND (279) 33
OR (280) 31
NOT (281) 39
TRUE (282) 35
FALSE (283) 36
RETURN (284) 24
SUB (285) 51 60
ADD (286) 50
MULT (287) 53
DIV (288) 54
MOD (289) 55
EQ (290) 40
NEQ (291) 41
LT (292) 42
GT (293) 43
LTE (294) 44
GTE (295) 45
SEMICOLON (296) 4 6 14
COLON (297) 7 8 9
COMMA (298) 12 27 48
L_PAREN (299) 7 37 58 61
R_PAREN (300) 7 37 58 61
L_SQUARE_BRACKET (301) 8 29
R_SQUARE_BRACKET (302) 8 29
ASSIGN (303) 16
NUMBER (304) 8 57
IDENTIFIER (305) 4 11 12 28 29 61
INTEGER (306) 7 8 9


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4, on right: 3
declarations (56)
    on left: 5 6, on right: 4 6
declaration (57)
    on left: 7 8 9, on right: 6
identifiers (58)
    on left: 10 11 12, on right: 7 8 9 11 12
statements (59)
    on left: 13 14, on right: 4 14 17 18 19 20
statement (60)
    on left: 15 16 17 18 19 20 21 22 23 24, on right: 14
vars (61)
    on left: 25 26 27, on right: 21 22 27
var (62)
    on left: 28 29, on right: 16 26 27 56
bool_expr (63)
    on left: 30 31, on right: 17 18 19 20 31 37
relation_and_expr (64)
    on left: 32 33, on right: 30 31 33
relation_exprs (65)
    on left: 34 35 36 37, on right: 38 39
relation_expr (66)
    on left: 38 39, on right: 32 33
comp (67)
    on left: 40 41 42 43 44 45, on right: 34
expressions (68)
    on left: 46 47 48, on right: 48 58 61
expression (69)
    on left: 49 50 51, on right: 16 24 29 34 47 48 50 51
multiplicative_expr (70)
    on left: 52 53 54 55, on right: 49 50 51 53 54 55
terms (71)
    on left: 56 57 58, on right: 59 60
term (72)
    on left: 59 60 61, on right: 52 53 54 55


state 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


state 1

    4 function: FUNCTION . IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENTIFIER  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: functions .

    $default  reduce using rule 1 (program)


state 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


state 5

    4 function: FUNCTION IDENTIFIER . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


state 8

    4 function: FUNCTION IDENTIFIER SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


state 9

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    COMMA       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    COLON     reduce using rule 10 (identifiers)
    $default  reduce using rule 5 (declarations)

    declarations  go to state 12
    declaration   go to state 13
    identifiers   go to state 14


state 10

   12 identifiers: COMMA . IDENTIFIER identifiers

    IDENTIFIER  shift, and go to state 15


state 11

   11 identifiers: IDENTIFIER . identifiers

    COMMA       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 10 (identifiers)

    identifiers  go to state 16


state 12

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 17


state 13

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 18


state 14

    7 declaration: identifiers . COLON ENUM L_PAREN identifiers R_PAREN INTEGER
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers . COLON INTEGER

    COLON  shift, and go to state 19


state 15

   12 identifiers: COMMA IDENTIFIER . identifiers

    COMMA       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 10 (identifiers)

    identifiers  go to state 20


state 16

   11 identifiers: IDENTIFIER identifiers .

    $default  reduce using rule 11 (identifiers)


state 17

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 21


state 18

    6 declarations: declaration SEMICOLON . declarations

    COMMA       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    COLON     reduce using rule 10 (identifiers)
    $default  reduce using rule 5 (declarations)

    declarations  go to state 22
    declaration   go to state 13
    identifiers   go to state 14


state 19

    7 declaration: identifiers COLON . ENUM L_PAREN identifiers R_PAREN INTEGER
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON . INTEGER

    ARRAY    shift, and go to state 23
    ENUM     shift, and go to state 24
    INTEGER  shift, and go to state 25


state 20

   12 identifiers: COMMA IDENTIFIER identifiers .

    $default  reduce using rule 12 (identifiers)


state 21

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    COMMA       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    COLON     reduce using rule 10 (identifiers)
    $default  reduce using rule 5 (declarations)

    declarations  go to state 26
    declaration   go to state 13
    identifiers   go to state 14


state 22

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


state 23

    8 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


state 24

    7 declaration: identifiers COLON ENUM . L_PAREN identifiers R_PAREN INTEGER

    L_PAREN  shift, and go to state 28


state 25

    9 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 9 (declaration)


state 26

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 29


state 27

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 30


state 28

    7 declaration: identifiers COLON ENUM L_PAREN . identifiers R_PAREN INTEGER

    COMMA       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 10 (identifiers)

    identifiers  go to state 31


state 29

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 32


state 30

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 33


state 31

    7 declaration: identifiers COLON ENUM L_PAREN identifiers . R_PAREN INTEGER

    R_PAREN  shift, and go to state 34


state 32

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    SEMICOLON  reduce using rule 15 (statement)
    $default   reduce using rule 13 (statements)

    statements  go to state 43
    statement   go to state 44
    var         go to state 45


state 33

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 46


state 34

    7 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN . INTEGER

    INTEGER  shift, and go to state 47


state 35

   17 statement: IF . bool_expr THEN statements ENDIF
   18          | IF . bool_expr THEN statements ELSE statements ENDIF

    AND         shift, and go to state 48
    OR          shift, and go to state 49
    NOT         shift, and go to state 50
    TRUE        shift, and go to state 51
    FALSE       shift, and go to state 52
    SUB         shift, and go to state 53
    ADD         shift, and go to state 54
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 58
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var                  go to state 61
    bool_expr            go to state 62
    relation_and_expr    go to state 63
    relation_exprs       go to state 64
    relation_expr        go to state 65
    expression           go to state 66
    multiplicative_expr  go to state 67
    terms                go to state 68
    term                 go to state 69


state 36

   19 statement: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    AND         shift, and go to state 48
    OR          shift, and go to state 49
    NOT         shift, and go to state 50
    TRUE        shift, and go to state 51
    FALSE       shift, and go to state 52
    SUB         shift, and go to state 53
    ADD         shift, and go to state 54
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 58
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var                  go to state 61
    bool_expr            go to state 70
    relation_and_expr    go to state 63
    relation_exprs       go to state 64
    relation_expr        go to state 65
    expression           go to state 66
    multiplicative_expr  go to state 67
    terms                go to state 68
    term                 go to state 69


state 37

   20 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 71


state 38

   23 statement: CONTINUE .

    $default  reduce using rule 23 (statement)


state 39

   21 statement: READ . vars

    IDENTIFIER  shift, and go to state 42

    $default  reduce using rule 25 (vars)

    vars  go to state 72
    var   go to state 73


state 40

   22 statement: WRITE . vars

    IDENTIFIER  shift, and go to state 42

    $default  reduce using rule 25 (vars)

    vars  go to state 74
    var   go to state 73


state 41

   24 statement: RETURN . expression

    SUB         shift, and go to state 53
    ADD         shift, and go to state 54
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 75
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var                  go to state 61
    expression           go to state 76
    multiplicative_expr  go to state 67
    terms                go to state 68
    term                 go to state 69


state 42

   28 var: IDENTIFIER .
   29    | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 77

    $default  reduce using rule 28 (var)


state 43

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 78


state 44

   14 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 79


state 45

   16 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 80


state 46

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 81


state 47

    7 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN INTEGER .

    $default  reduce using rule 7 (declaration)


state 48

   33 relation_and_expr: AND . relation_expr relation_and_expr

    NOT         shift, and go to state 50
    TRUE        shift, and go to state 51
    FALSE       shift, and go to state 52
    SUB         shift, and go to state 53
    ADD         shift, and go to state 54
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 58
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var                  go to state 61
    relation_exprs       go to state 64
    relation_expr        go to state 82
    expression           go to state 66
    multiplicative_expr  go to state 67
    terms                go to state 68
    term                 go to state 69


state 49

   31 bool_expr: OR . relation_and_expr bool_expr

    AND         shift, and go to state 48
    NOT         shift, and go to state 50
    TRUE        shift, and go to state 51
    FALSE       shift, and go to state 52
    SUB         shift, and go to state 53
    ADD         shift, and go to state 54
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 58
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var                  go to state 61
    relation_and_expr    go to state 83
    relation_exprs       go to state 64
    relation_expr        go to state 65
    expression           go to state 66
    multiplicative_expr  go to state 67
    terms                go to state 68
    term                 go to state 69


state 50

   39 relation_expr: NOT . relation_exprs

    TRUE        shift, and go to state 51
    FALSE       shift, and go to state 52
    SUB         shift, and go to state 53
    ADD         shift, and go to state 54
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 58
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var                  go to state 61
    relation_exprs       go to state 84
    expression           go to state 66
    multiplicative_expr  go to state 67
    terms                go to state 68
    term                 go to state 69


state 51

   35 relation_exprs: TRUE .

    $default  reduce using rule 35 (relation_exprs)


state 52

   36 relation_exprs: FALSE .

    $default  reduce using rule 36 (relation_exprs)


state 53

   51 expression: SUB . multiplicative_expr expression
   60 term: SUB . terms

    SUB         shift, and go to state 85
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 75
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var                  go to state 61
    multiplicative_expr  go to state 86
    terms                go to state 87
    term                 go to state 69


state 54

   50 expression: ADD . multiplicative_expr expression

    SUB         shift, and go to state 85
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 75
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var                  go to state 61
    multiplicative_expr  go to state 88
    terms                go to state 68
    term                 go to state 69


state 55

   53 multiplicative_expr: MULT . term multiplicative_expr

    SUB         shift, and go to state 85
    L_PAREN     shift, and go to state 75
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var    go to state 61
    terms  go to state 68
    term   go to state 89


state 56

   54 multiplicative_expr: DIV . term multiplicative_expr

    SUB         shift, and go to state 85
    L_PAREN     shift, and go to state 75
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var    go to state 61
    terms  go to state 68
    term   go to state 90


state 57

   55 multiplicative_expr: MOD . term multiplicative_expr

    SUB         shift, and go to state 85
    L_PAREN     shift, and go to state 75
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var    go to state 61
    terms  go to state 68
    term   go to state 91


state 58

   37 relation_exprs: L_PAREN . bool_expr R_PAREN
   58 terms: L_PAREN . expressions R_PAREN

    AND         shift, and go to state 48
    OR          shift, and go to state 49
    NOT         shift, and go to state 50
    TRUE        shift, and go to state 51
    FALSE       shift, and go to state 52
    SUB         shift, and go to state 53
    ADD         shift, and go to state 54
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 58
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    $default  reduce using rule 46 (expressions)

    var                  go to state 61
    bool_expr            go to state 92
    relation_and_expr    go to state 63
    relation_exprs       go to state 64
    relation_expr        go to state 65
    expressions          go to state 93
    expression           go to state 94
    multiplicative_expr  go to state 67
    terms                go to state 68
    term                 go to state 69


state 59

   57 terms: NUMBER .

    $default  reduce using rule 57 (terms)


state 60

   28 var: IDENTIFIER .
   29    | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   61 term: IDENTIFIER . L_PAREN expressions R_PAREN

    L_PAREN           shift, and go to state 95
    L_SQUARE_BRACKET  shift, and go to state 77

    L_PAREN   [reduce using rule 28 (var)]
    $default  reduce using rule 28 (var)


state 61

   56 terms: var .

    $default  reduce using rule 56 (terms)


state 62

   17 statement: IF bool_expr . THEN statements ENDIF
   18          | IF bool_expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 96


state 63

   30 bool_expr: relation_and_expr .

    $default  reduce using rule 30 (bool_expr)


state 64

   38 relation_expr: relation_exprs .

    $default  reduce using rule 38 (relation_expr)


state 65

   32 relation_and_expr: relation_expr .

    $default  reduce using rule 32 (relation_and_expr)


state 66

   34 relation_exprs: expression . comp expression

    EQ   shift, and go to state 97
    NEQ  shift, and go to state 98
    LT   shift, and go to state 99
    GT   shift, and go to state 100
    LTE  shift, and go to state 101
    GTE  shift, and go to state 102

    comp  go to state 103


state 67

   49 expression: multiplicative_expr .

    $default  reduce using rule 49 (expression)


state 68

   59 term: terms .

    $default  reduce using rule 59 (term)


state 69

   52 multiplicative_expr: term .

    $default  reduce using rule 52 (multiplicative_expr)


state 70

   19 statement: WHILE bool_expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 104


state 71

   20 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    SEMICOLON  reduce using rule 15 (statement)
    $default   reduce using rule 13 (statements)

    statements  go to state 105
    statement   go to state 44
    var         go to state 45


state 72

   21 statement: READ vars .

    $default  reduce using rule 21 (statement)


state 73

   26 vars: var .
   27     | var . COMMA vars

    COMMA  shift, and go to state 106

    $default  reduce using rule 26 (vars)


state 74

   22 statement: WRITE vars .

    $default  reduce using rule 22 (statement)


state 75

   58 terms: L_PAREN . expressions R_PAREN

    SUB         shift, and go to state 53
    ADD         shift, and go to state 54
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 75
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    $default  reduce using rule 46 (expressions)

    var                  go to state 61
    expressions          go to state 93
    expression           go to state 107
    multiplicative_expr  go to state 67
    terms                go to state 68
    term                 go to state 69


state 76

   24 statement: RETURN expression .

    $default  reduce using rule 24 (statement)


state 77

   29 var: IDENTIFIER L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB         shift, and go to state 53
    ADD         shift, and go to state 54
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 75
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var                  go to state 61
    expression           go to state 108
    multiplicative_expr  go to state 67
    terms                go to state 68
    term                 go to state 69


state 78

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


state 79

   14 statements: statement SEMICOLON . statements

    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    SEMICOLON  reduce using rule 15 (statement)
    $default   reduce using rule 13 (statements)

    statements  go to state 109
    statement   go to state 44
    var         go to state 45


state 80

   16 statement: var ASSIGN . expression

    SUB         shift, and go to state 53
    ADD         shift, and go to state 54
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 75
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var                  go to state 61
    expression           go to state 110
    multiplicative_expr  go to state 67
    terms                go to state 68
    term                 go to state 69


state 81

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


state 82

   33 relation_and_expr: AND relation_expr . relation_and_expr

    AND         shift, and go to state 48
    NOT         shift, and go to state 50
    TRUE        shift, and go to state 51
    FALSE       shift, and go to state 52
    SUB         shift, and go to state 53
    ADD         shift, and go to state 54
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 58
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var                  go to state 61
    relation_and_expr    go to state 111
    relation_exprs       go to state 64
    relation_expr        go to state 65
    expression           go to state 66
    multiplicative_expr  go to state 67
    terms                go to state 68
    term                 go to state 69


state 83

   31 bool_expr: OR relation_and_expr . bool_expr

    AND         shift, and go to state 48
    OR          shift, and go to state 49
    NOT         shift, and go to state 50
    TRUE        shift, and go to state 51
    FALSE       shift, and go to state 52
    SUB         shift, and go to state 53
    ADD         shift, and go to state 54
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 58
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var                  go to state 61
    bool_expr            go to state 112
    relation_and_expr    go to state 63
    relation_exprs       go to state 64
    relation_expr        go to state 65
    expression           go to state 66
    multiplicative_expr  go to state 67
    terms                go to state 68
    term                 go to state 69


state 84

   39 relation_expr: NOT relation_exprs .

    $default  reduce using rule 39 (relation_expr)


state 85

   60 term: SUB . terms

    L_PAREN     shift, and go to state 75
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 42

    var    go to state 61
    terms  go to state 113


state 86

   51 expression: SUB multiplicative_expr . expression

    SUB         shift, and go to state 53
    ADD         shift, and go to state 54
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 75
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var                  go to state 61
    expression           go to state 114
    multiplicative_expr  go to state 67
    terms                go to state 68
    term                 go to state 69


state 87

   59 term: terms .
   60     | SUB terms .

    SUB         reduce using rule 59 (term)
    SUB         [reduce using rule 60 (term)]
    ADD         reduce using rule 59 (term)
    ADD         [reduce using rule 60 (term)]
    MULT        reduce using rule 59 (term)
    MULT        [reduce using rule 60 (term)]
    DIV         reduce using rule 59 (term)
    DIV         [reduce using rule 60 (term)]
    MOD         reduce using rule 59 (term)
    MOD         [reduce using rule 60 (term)]
    L_PAREN     reduce using rule 59 (term)
    L_PAREN     [reduce using rule 60 (term)]
    NUMBER      reduce using rule 59 (term)
    NUMBER      [reduce using rule 60 (term)]
    IDENTIFIER  reduce using rule 59 (term)
    IDENTIFIER  [reduce using rule 60 (term)]
    $default    reduce using rule 60 (term)


state 88

   50 expression: ADD multiplicative_expr . expression

    SUB         shift, and go to state 53
    ADD         shift, and go to state 54
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 75
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var                  go to state 61
    expression           go to state 115
    multiplicative_expr  go to state 67
    terms                go to state 68
    term                 go to state 69


state 89

   53 multiplicative_expr: MULT term . multiplicative_expr

    SUB         shift, and go to state 85
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 75
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var                  go to state 61
    multiplicative_expr  go to state 116
    terms                go to state 68
    term                 go to state 69


state 90

   54 multiplicative_expr: DIV term . multiplicative_expr

    SUB         shift, and go to state 85
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 75
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var                  go to state 61
    multiplicative_expr  go to state 117
    terms                go to state 68
    term                 go to state 69


state 91

   55 multiplicative_expr: MOD term . multiplicative_expr

    SUB         shift, and go to state 85
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 75
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var                  go to state 61
    multiplicative_expr  go to state 118
    terms                go to state 68
    term                 go to state 69


state 92

   37 relation_exprs: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 119


state 93

   58 terms: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 120


state 94

   34 relation_exprs: expression . comp expression
   47 expressions: expression .
   48            | expression . COMMA expressions

    EQ     shift, and go to state 97
    NEQ    shift, and go to state 98
    LT     shift, and go to state 99
    GT     shift, and go to state 100
    LTE    shift, and go to state 101
    GTE    shift, and go to state 102
    COMMA  shift, and go to state 121

    $default  reduce using rule 47 (expressions)

    comp  go to state 103


state 95

   61 term: IDENTIFIER L_PAREN . expressions R_PAREN

    SUB         shift, and go to state 53
    ADD         shift, and go to state 54
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 75
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    $default  reduce using rule 46 (expressions)

    var                  go to state 61
    expressions          go to state 122
    expression           go to state 107
    multiplicative_expr  go to state 67
    terms                go to state 68
    term                 go to state 69


state 96

   17 statement: IF bool_expr THEN . statements ENDIF
   18          | IF bool_expr THEN . statements ELSE statements ENDIF

    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    SEMICOLON  reduce using rule 15 (statement)
    $default   reduce using rule 13 (statements)

    statements  go to state 123
    statement   go to state 44
    var         go to state 45


state 97

   40 comp: EQ .

    $default  reduce using rule 40 (comp)


state 98

   41 comp: NEQ .

    $default  reduce using rule 41 (comp)


state 99

   42 comp: LT .

    $default  reduce using rule 42 (comp)


state 100

   43 comp: GT .

    $default  reduce using rule 43 (comp)


state 101

   44 comp: LTE .

    $default  reduce using rule 44 (comp)


state 102

   45 comp: GTE .

    $default  reduce using rule 45 (comp)


state 103

   34 relation_exprs: expression comp . expression

    SUB         shift, and go to state 53
    ADD         shift, and go to state 54
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 75
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var                  go to state 61
    expression           go to state 124
    multiplicative_expr  go to state 67
    terms                go to state 68
    term                 go to state 69


state 104

   19 statement: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    SEMICOLON  reduce using rule 15 (statement)
    $default   reduce using rule 13 (statements)

    statements  go to state 125
    statement   go to state 44
    var         go to state 45


state 105

   20 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 126


state 106

   27 vars: var COMMA . vars

    IDENTIFIER  shift, and go to state 42

    $default  reduce using rule 25 (vars)

    vars  go to state 127
    var   go to state 73


state 107

   47 expressions: expression .
   48            | expression . COMMA expressions

    COMMA  shift, and go to state 121

    $default  reduce using rule 47 (expressions)


state 108

   29 var: IDENTIFIER L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 128


state 109

   14 statements: statement SEMICOLON statements .

    $default  reduce using rule 14 (statements)


state 110

   16 statement: var ASSIGN expression .

    $default  reduce using rule 16 (statement)


state 111

   33 relation_and_expr: AND relation_expr relation_and_expr .

    $default  reduce using rule 33 (relation_and_expr)


state 112

   31 bool_expr: OR relation_and_expr bool_expr .

    $default  reduce using rule 31 (bool_expr)


state 113

   60 term: SUB terms .

    $default  reduce using rule 60 (term)


state 114

   51 expression: SUB multiplicative_expr expression .

    $default  reduce using rule 51 (expression)


state 115

   50 expression: ADD multiplicative_expr expression .

    $default  reduce using rule 50 (expression)


state 116

   53 multiplicative_expr: MULT term multiplicative_expr .

    $default  reduce using rule 53 (multiplicative_expr)


state 117

   54 multiplicative_expr: DIV term multiplicative_expr .

    $default  reduce using rule 54 (multiplicative_expr)


state 118

   55 multiplicative_expr: MOD term multiplicative_expr .

    $default  reduce using rule 55 (multiplicative_expr)


state 119

   37 relation_exprs: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 37 (relation_exprs)


state 120

   58 terms: L_PAREN expressions R_PAREN .

    $default  reduce using rule 58 (terms)


state 121

   48 expressions: expression COMMA . expressions

    SUB         shift, and go to state 53
    ADD         shift, and go to state 54
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 75
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    $default  reduce using rule 46 (expressions)

    var                  go to state 61
    expressions          go to state 129
    expression           go to state 107
    multiplicative_expr  go to state 67
    terms                go to state 68
    term                 go to state 69


state 122

   61 term: IDENTIFIER L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 130


state 123

   17 statement: IF bool_expr THEN statements . ENDIF
   18          | IF bool_expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 131
    ELSE   shift, and go to state 132


state 124

   34 relation_exprs: expression comp expression .

    $default  reduce using rule 34 (relation_exprs)


state 125

   19 statement: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 133


state 126

   20 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 134


state 127

   27 vars: var COMMA vars .

    $default  reduce using rule 27 (vars)


state 128

   29 var: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 29 (var)


state 129

   48 expressions: expression COMMA expressions .

    $default  reduce using rule 48 (expressions)


state 130

   61 term: IDENTIFIER L_PAREN expressions R_PAREN .

    $default  reduce using rule 61 (term)


state 131

   17 statement: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 17 (statement)


state 132

   18 statement: IF bool_expr THEN statements ELSE . statements ENDIF

    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    SEMICOLON  reduce using rule 15 (statement)
    $default   reduce using rule 13 (statements)

    statements  go to state 135
    statement   go to state 44
    var         go to state 45


state 133

   19 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 19 (statement)


state 134

   20 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    AND         shift, and go to state 48
    OR          shift, and go to state 49
    NOT         shift, and go to state 50
    TRUE        shift, and go to state 51
    FALSE       shift, and go to state 52
    SUB         shift, and go to state 53
    ADD         shift, and go to state 54
    MULT        shift, and go to state 55
    DIV         shift, and go to state 56
    MOD         shift, and go to state 57
    L_PAREN     shift, and go to state 58
    NUMBER      shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    var                  go to state 61
    bool_expr            go to state 136
    relation_and_expr    go to state 63
    relation_exprs       go to state 64
    relation_expr        go to state 65
    expression           go to state 66
    multiplicative_expr  go to state 67
    terms                go to state 68
    term                 go to state 69


state 135

   18 statement: IF bool_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 137


state 136

   20 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 20 (statement)


state 137

   18 statement: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 18 (statement)
