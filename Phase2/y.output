Useless nonterminals

   relation_exprs


Terminals which are not used

   NOT


Useless rules

   60 relation_exprs: relation_expr
   61               | NOT relation_expr


State 58 conflicts: 1 shift/reduce
State 84 conflicts: 8 reduce/reduce
State 99 conflicts: 8 shift/reduce
State 100 conflicts: 8 shift/reduce


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: /* empty */
    3          | function functions

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: /* empty */
    6             | declaration SEMICOLON declarations

    7 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON INTEGER

   10 identifiers: /* empty */
   11            | IDENTIFIER identifiers
   12            | COMMA IDENTIFIER identifiers

   13 statements: /* empty */
   14           | statement SEMICOLON statements

   15 statement: /* empty */
   16          | var ASSIGN expression
   17          | IF bool_expr THEN statements ENDIF
   18          | IF bool_expr THEN statements ELSE statements ENDIF
   19          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   20          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   21          | READ vars
   22          | WRITE vars
   23          | CONTINUE
   24          | RETURN expression

   25 vars: /* empty */
   26     | var
   27     | var COMMA vars

   28 var: IDENTIFIER
   29    | IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   30 bool_expr: relation_and_expr
   31          | OR relation_and_expr bool_expr

   32 relation_and_expr: relation_expr
   33                  | AND relation_expr relation_and_expr

   34 relation_expr: expressions comp expressions
   35              | TRUE
   36              | FALSE
   37              | L_PAREN bool_expr R_PAREN

   38 comp: EQ
   39     | NEQ
   40     | LT
   41     | GT
   42     | LTE
   43     | GTE

   44 expressions: /* empty */
   45            | expression
   46            | expression COMMA expressions

   47 expression: multiplicative_expr
   48           | ADD multiplicative_expr expression
   49           | SUB multiplicative_expr expression

   50 multiplicative_expr: term
   51                    | MULT term multiplicative_expr
   52                    | DIV term multiplicative_expr
   53                    | MOD term multiplicative_expr

   54 terms: var
   55      | NUMBER
   56      | L_PAREN expressions R_PAREN

   57 term: terms
   58     | SUB terms
   59     | IDENTIFIER L_PAREN expressions R_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
ARRAY (265) 8
ENUM (266) 7
OF (267) 8
IF (268) 17 18
THEN (269) 17 18
ENDIF (270) 17 18
ELSE (271) 18
WHILE (272) 19 20
DO (273) 20
BEGINLOOP (274) 19 20
ENDLOOP (275) 19 20
CONTINUE (276) 23
READ (277) 21
WRITE (278) 22
AND (279) 33
OR (280) 31
NOT (281)
TRUE (282) 35
FALSE (283) 36
RETURN (284) 24
SUB (285) 49 58
ADD (286) 48
MULT (287) 51
DIV (288) 52
MOD (289) 53
EQ (290) 38
NEQ (291) 39
LT (292) 40
GT (293) 41
LTE (294) 42
GTE (295) 43
SEMICOLON (296) 4 6 14
COLON (297) 7 8 9
COMMA (298) 12 27 46
L_PAREN (299) 7 37 56 59
R_PAREN (300) 7 37 56 59
L_SQUARE_BRACKET (301) 8 29
R_SQUARE_BRACKET (302) 8 29
ASSIGN (303) 16
NUMBER (304) 8 55
IDENTIFIER (305) 4 11 12 28 29 59
INTEGER (306) 8 9


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4, on right: 3
declarations (56)
    on left: 5 6, on right: 4 6
declaration (57)
    on left: 7 8 9, on right: 6
identifiers (58)
    on left: 10 11 12, on right: 7 8 9 11 12
statements (59)
    on left: 13 14, on right: 4 14 17 18 19 20
statement (60)
    on left: 15 16 17 18 19 20 21 22 23 24, on right: 14
vars (61)
    on left: 25 26 27, on right: 21 22 27
var (62)
    on left: 28 29, on right: 16 26 27 54
bool_expr (63)
    on left: 30 31, on right: 17 18 19 20 31 37
relation_and_expr (64)
    on left: 32 33, on right: 30 31 33
relation_expr (65)
    on left: 34 35 36 37, on right: 32 33
comp (66)
    on left: 38 39 40 41 42 43, on right: 34
expressions (67)
    on left: 44 45 46, on right: 34 46 56 59
expression (68)
    on left: 47 48 49, on right: 16 24 29 45 46 48 49
multiplicative_expr (69)
    on left: 50 51 52 53, on right: 47 48 49 51 52 53
terms (70)
    on left: 54 55 56, on right: 57 58
term (71)
    on left: 57 58 59, on right: 50 51 52 53


state 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


state 1

    4 function: FUNCTION . IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENTIFIER  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: functions .

    $default  reduce using rule 1 (program)


state 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


state 5

    4 function: FUNCTION IDENTIFIER . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


state 8

    4 function: FUNCTION IDENTIFIER SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


state 9

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    COMMA       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    COLON     reduce using rule 10 (identifiers)
    $default  reduce using rule 5 (declarations)

    declarations  go to state 12
    declaration   go to state 13
    identifiers   go to state 14


state 10

   12 identifiers: COMMA . IDENTIFIER identifiers

    IDENTIFIER  shift, and go to state 15


state 11

   11 identifiers: IDENTIFIER . identifiers

    COMMA       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 10 (identifiers)

    identifiers  go to state 16


state 12

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 17


state 13

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 18


state 14

    7 declaration: identifiers . COLON ENUM L_PAREN identifiers R_PAREN
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers . COLON INTEGER

    COLON  shift, and go to state 19


state 15

   12 identifiers: COMMA IDENTIFIER . identifiers

    COMMA       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 10 (identifiers)

    identifiers  go to state 20


state 16

   11 identifiers: IDENTIFIER identifiers .

    $default  reduce using rule 11 (identifiers)


state 17

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 21


state 18

    6 declarations: declaration SEMICOLON . declarations

    COMMA       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    COLON     reduce using rule 10 (identifiers)
    $default  reduce using rule 5 (declarations)

    declarations  go to state 22
    declaration   go to state 13
    identifiers   go to state 14


state 19

    7 declaration: identifiers COLON . ENUM L_PAREN identifiers R_PAREN
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON . INTEGER

    ARRAY    shift, and go to state 23
    ENUM     shift, and go to state 24
    INTEGER  shift, and go to state 25


state 20

   12 identifiers: COMMA IDENTIFIER identifiers .

    $default  reduce using rule 12 (identifiers)


state 21

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    COMMA       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    COLON     reduce using rule 10 (identifiers)
    $default  reduce using rule 5 (declarations)

    declarations  go to state 26
    declaration   go to state 13
    identifiers   go to state 14


state 22

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


state 23

    8 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


state 24

    7 declaration: identifiers COLON ENUM . L_PAREN identifiers R_PAREN

    L_PAREN  shift, and go to state 28


state 25

    9 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 9 (declaration)


state 26

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 29


state 27

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 30


state 28

    7 declaration: identifiers COLON ENUM L_PAREN . identifiers R_PAREN

    COMMA       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 10 (identifiers)

    identifiers  go to state 31


state 29

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 32


state 30

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 33


state 31

    7 declaration: identifiers COLON ENUM L_PAREN identifiers . R_PAREN

    R_PAREN  shift, and go to state 34


state 32

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    SEMICOLON  reduce using rule 15 (statement)
    $default   reduce using rule 13 (statements)

    statements  go to state 43
    statement   go to state 44
    var         go to state 45


state 33

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 46


state 34

    7 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN .

    $default  reduce using rule 7 (declaration)


state 35

   17 statement: IF . bool_expr THEN statements ENDIF
   18          | IF . bool_expr THEN statements ELSE statements ENDIF

    AND         shift, and go to state 47
    OR          shift, and go to state 48
    TRUE        shift, and go to state 49
    FALSE       shift, and go to state 50
    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 56
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 44 (expressions)

    var                  go to state 59
    bool_expr            go to state 60
    relation_and_expr    go to state 61
    relation_expr        go to state 62
    expressions          go to state 63
    expression           go to state 64
    multiplicative_expr  go to state 65
    terms                go to state 66
    term                 go to state 67


state 36

   19 statement: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    AND         shift, and go to state 47
    OR          shift, and go to state 48
    TRUE        shift, and go to state 49
    FALSE       shift, and go to state 50
    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 56
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 44 (expressions)

    var                  go to state 59
    bool_expr            go to state 68
    relation_and_expr    go to state 61
    relation_expr        go to state 62
    expressions          go to state 63
    expression           go to state 64
    multiplicative_expr  go to state 65
    terms                go to state 66
    term                 go to state 67


state 37

   20 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 69


state 38

   23 statement: CONTINUE .

    $default  reduce using rule 23 (statement)


state 39

   21 statement: READ . vars

    IDENTIFIER  shift, and go to state 42

    $default  reduce using rule 25 (vars)

    vars  go to state 70
    var   go to state 71


state 40

   22 statement: WRITE . vars

    IDENTIFIER  shift, and go to state 42

    $default  reduce using rule 25 (vars)

    vars  go to state 72
    var   go to state 71


state 41

   24 statement: RETURN . expression

    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 73
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    var                  go to state 59
    expression           go to state 74
    multiplicative_expr  go to state 65
    terms                go to state 66
    term                 go to state 67


state 42

   28 var: IDENTIFIER .
   29    | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 75

    $default  reduce using rule 28 (var)


state 43

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 76


state 44

   14 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 77


state 45

   16 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 78


state 46

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 79


state 47

   33 relation_and_expr: AND . relation_expr relation_and_expr

    TRUE        shift, and go to state 49
    FALSE       shift, and go to state 50
    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 56
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 44 (expressions)

    var                  go to state 59
    relation_expr        go to state 80
    expressions          go to state 63
    expression           go to state 64
    multiplicative_expr  go to state 65
    terms                go to state 66
    term                 go to state 67


state 48

   31 bool_expr: OR . relation_and_expr bool_expr

    AND         shift, and go to state 47
    TRUE        shift, and go to state 49
    FALSE       shift, and go to state 50
    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 56
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 44 (expressions)

    var                  go to state 59
    relation_and_expr    go to state 81
    relation_expr        go to state 62
    expressions          go to state 63
    expression           go to state 64
    multiplicative_expr  go to state 65
    terms                go to state 66
    term                 go to state 67


state 49

   35 relation_expr: TRUE .

    $default  reduce using rule 35 (relation_expr)


state 50

   36 relation_expr: FALSE .

    $default  reduce using rule 36 (relation_expr)


state 51

   49 expression: SUB . multiplicative_expr expression
   58 term: SUB . terms

    SUB         shift, and go to state 82
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 73
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    var                  go to state 59
    multiplicative_expr  go to state 83
    terms                go to state 84
    term                 go to state 67


state 52

   48 expression: ADD . multiplicative_expr expression

    SUB         shift, and go to state 82
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 73
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    var                  go to state 59
    multiplicative_expr  go to state 85
    terms                go to state 66
    term                 go to state 67


state 53

   51 multiplicative_expr: MULT . term multiplicative_expr

    SUB         shift, and go to state 82
    L_PAREN     shift, and go to state 73
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    var    go to state 59
    terms  go to state 66
    term   go to state 86


state 54

   52 multiplicative_expr: DIV . term multiplicative_expr

    SUB         shift, and go to state 82
    L_PAREN     shift, and go to state 73
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    var    go to state 59
    terms  go to state 66
    term   go to state 87


state 55

   53 multiplicative_expr: MOD . term multiplicative_expr

    SUB         shift, and go to state 82
    L_PAREN     shift, and go to state 73
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    var    go to state 59
    terms  go to state 66
    term   go to state 88


state 56

   37 relation_expr: L_PAREN . bool_expr R_PAREN
   56 terms: L_PAREN . expressions R_PAREN

    AND         shift, and go to state 47
    OR          shift, and go to state 48
    TRUE        shift, and go to state 49
    FALSE       shift, and go to state 50
    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 56
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 44 (expressions)

    var                  go to state 59
    bool_expr            go to state 89
    relation_and_expr    go to state 61
    relation_expr        go to state 62
    expressions          go to state 90
    expression           go to state 64
    multiplicative_expr  go to state 65
    terms                go to state 66
    term                 go to state 67


state 57

   55 terms: NUMBER .

    $default  reduce using rule 55 (terms)


state 58

   28 var: IDENTIFIER .
   29    | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   59 term: IDENTIFIER . L_PAREN expressions R_PAREN

    L_PAREN           shift, and go to state 91
    L_SQUARE_BRACKET  shift, and go to state 75

    L_PAREN   [reduce using rule 28 (var)]
    $default  reduce using rule 28 (var)


state 59

   54 terms: var .

    $default  reduce using rule 54 (terms)


state 60

   17 statement: IF bool_expr . THEN statements ENDIF
   18          | IF bool_expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 92


state 61

   30 bool_expr: relation_and_expr .

    $default  reduce using rule 30 (bool_expr)


state 62

   32 relation_and_expr: relation_expr .

    $default  reduce using rule 32 (relation_and_expr)


state 63

   34 relation_expr: expressions . comp expressions

    EQ   shift, and go to state 93
    NEQ  shift, and go to state 94
    LT   shift, and go to state 95
    GT   shift, and go to state 96
    LTE  shift, and go to state 97
    GTE  shift, and go to state 98

    comp  go to state 99


state 64

   45 expressions: expression .
   46            | expression . COMMA expressions

    COMMA  shift, and go to state 100

    $default  reduce using rule 45 (expressions)


state 65

   47 expression: multiplicative_expr .

    $default  reduce using rule 47 (expression)


state 66

   57 term: terms .

    $default  reduce using rule 57 (term)


state 67

   50 multiplicative_expr: term .

    $default  reduce using rule 50 (multiplicative_expr)


state 68

   19 statement: WHILE bool_expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 101


state 69

   20 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    SEMICOLON  reduce using rule 15 (statement)
    $default   reduce using rule 13 (statements)

    statements  go to state 102
    statement   go to state 44
    var         go to state 45


state 70

   21 statement: READ vars .

    $default  reduce using rule 21 (statement)


state 71

   26 vars: var .
   27     | var . COMMA vars

    COMMA  shift, and go to state 103

    $default  reduce using rule 26 (vars)


state 72

   22 statement: WRITE vars .

    $default  reduce using rule 22 (statement)


state 73

   56 terms: L_PAREN . expressions R_PAREN

    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 73
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 44 (expressions)

    var                  go to state 59
    expressions          go to state 104
    expression           go to state 64
    multiplicative_expr  go to state 65
    terms                go to state 66
    term                 go to state 67


state 74

   24 statement: RETURN expression .

    $default  reduce using rule 24 (statement)


state 75

   29 var: IDENTIFIER L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 73
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    var                  go to state 59
    expression           go to state 105
    multiplicative_expr  go to state 65
    terms                go to state 66
    term                 go to state 67


state 76

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


state 77

   14 statements: statement SEMICOLON . statements

    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    SEMICOLON  reduce using rule 15 (statement)
    $default   reduce using rule 13 (statements)

    statements  go to state 106
    statement   go to state 44
    var         go to state 45


state 78

   16 statement: var ASSIGN . expression

    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 73
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    var                  go to state 59
    expression           go to state 107
    multiplicative_expr  go to state 65
    terms                go to state 66
    term                 go to state 67


state 79

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


state 80

   33 relation_and_expr: AND relation_expr . relation_and_expr

    AND         shift, and go to state 47
    TRUE        shift, and go to state 49
    FALSE       shift, and go to state 50
    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 56
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 44 (expressions)

    var                  go to state 59
    relation_and_expr    go to state 108
    relation_expr        go to state 62
    expressions          go to state 63
    expression           go to state 64
    multiplicative_expr  go to state 65
    terms                go to state 66
    term                 go to state 67


state 81

   31 bool_expr: OR relation_and_expr . bool_expr

    AND         shift, and go to state 47
    OR          shift, and go to state 48
    TRUE        shift, and go to state 49
    FALSE       shift, and go to state 50
    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 56
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 44 (expressions)

    var                  go to state 59
    bool_expr            go to state 109
    relation_and_expr    go to state 61
    relation_expr        go to state 62
    expressions          go to state 63
    expression           go to state 64
    multiplicative_expr  go to state 65
    terms                go to state 66
    term                 go to state 67


state 82

   58 term: SUB . terms

    L_PAREN     shift, and go to state 73
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 42

    var    go to state 59
    terms  go to state 110


state 83

   49 expression: SUB multiplicative_expr . expression

    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 73
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    var                  go to state 59
    expression           go to state 111
    multiplicative_expr  go to state 65
    terms                go to state 66
    term                 go to state 67


state 84

   57 term: terms .
   58     | SUB terms .

    SUB         reduce using rule 57 (term)
    SUB         [reduce using rule 58 (term)]
    ADD         reduce using rule 57 (term)
    ADD         [reduce using rule 58 (term)]
    MULT        reduce using rule 57 (term)
    MULT        [reduce using rule 58 (term)]
    DIV         reduce using rule 57 (term)
    DIV         [reduce using rule 58 (term)]
    MOD         reduce using rule 57 (term)
    MOD         [reduce using rule 58 (term)]
    L_PAREN     reduce using rule 57 (term)
    L_PAREN     [reduce using rule 58 (term)]
    NUMBER      reduce using rule 57 (term)
    NUMBER      [reduce using rule 58 (term)]
    IDENTIFIER  reduce using rule 57 (term)
    IDENTIFIER  [reduce using rule 58 (term)]
    $default    reduce using rule 58 (term)


state 85

   48 expression: ADD multiplicative_expr . expression

    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 73
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    var                  go to state 59
    expression           go to state 112
    multiplicative_expr  go to state 65
    terms                go to state 66
    term                 go to state 67


state 86

   51 multiplicative_expr: MULT term . multiplicative_expr

    SUB         shift, and go to state 82
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 73
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    var                  go to state 59
    multiplicative_expr  go to state 113
    terms                go to state 66
    term                 go to state 67


state 87

   52 multiplicative_expr: DIV term . multiplicative_expr

    SUB         shift, and go to state 82
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 73
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    var                  go to state 59
    multiplicative_expr  go to state 114
    terms                go to state 66
    term                 go to state 67


state 88

   53 multiplicative_expr: MOD term . multiplicative_expr

    SUB         shift, and go to state 82
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 73
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    var                  go to state 59
    multiplicative_expr  go to state 115
    terms                go to state 66
    term                 go to state 67


state 89

   37 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 116


state 90

   34 relation_expr: expressions . comp expressions
   56 terms: L_PAREN expressions . R_PAREN

    EQ       shift, and go to state 93
    NEQ      shift, and go to state 94
    LT       shift, and go to state 95
    GT       shift, and go to state 96
    LTE      shift, and go to state 97
    GTE      shift, and go to state 98
    R_PAREN  shift, and go to state 117

    comp  go to state 99


state 91

   59 term: IDENTIFIER L_PAREN . expressions R_PAREN

    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 73
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 44 (expressions)

    var                  go to state 59
    expressions          go to state 118
    expression           go to state 64
    multiplicative_expr  go to state 65
    terms                go to state 66
    term                 go to state 67


state 92

   17 statement: IF bool_expr THEN . statements ENDIF
   18          | IF bool_expr THEN . statements ELSE statements ENDIF

    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    SEMICOLON  reduce using rule 15 (statement)
    $default   reduce using rule 13 (statements)

    statements  go to state 119
    statement   go to state 44
    var         go to state 45


state 93

   38 comp: EQ .

    $default  reduce using rule 38 (comp)


state 94

   39 comp: NEQ .

    $default  reduce using rule 39 (comp)


state 95

   40 comp: LT .

    $default  reduce using rule 40 (comp)


state 96

   41 comp: GT .

    $default  reduce using rule 41 (comp)


state 97

   42 comp: LTE .

    $default  reduce using rule 42 (comp)


state 98

   43 comp: GTE .

    $default  reduce using rule 43 (comp)


state 99

   34 relation_expr: expressions comp . expressions

    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 73
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    SUB         [reduce using rule 44 (expressions)]
    ADD         [reduce using rule 44 (expressions)]
    MULT        [reduce using rule 44 (expressions)]
    DIV         [reduce using rule 44 (expressions)]
    MOD         [reduce using rule 44 (expressions)]
    L_PAREN     [reduce using rule 44 (expressions)]
    NUMBER      [reduce using rule 44 (expressions)]
    IDENTIFIER  [reduce using rule 44 (expressions)]
    $default    reduce using rule 44 (expressions)

    var                  go to state 59
    expressions          go to state 120
    expression           go to state 64
    multiplicative_expr  go to state 65
    terms                go to state 66
    term                 go to state 67


state 100

   46 expressions: expression COMMA . expressions

    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 73
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    SUB         [reduce using rule 44 (expressions)]
    ADD         [reduce using rule 44 (expressions)]
    MULT        [reduce using rule 44 (expressions)]
    DIV         [reduce using rule 44 (expressions)]
    MOD         [reduce using rule 44 (expressions)]
    L_PAREN     [reduce using rule 44 (expressions)]
    NUMBER      [reduce using rule 44 (expressions)]
    IDENTIFIER  [reduce using rule 44 (expressions)]
    $default    reduce using rule 44 (expressions)

    var                  go to state 59
    expressions          go to state 121
    expression           go to state 64
    multiplicative_expr  go to state 65
    terms                go to state 66
    term                 go to state 67


state 101

   19 statement: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    SEMICOLON  reduce using rule 15 (statement)
    $default   reduce using rule 13 (statements)

    statements  go to state 122
    statement   go to state 44
    var         go to state 45


state 102

   20 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 123


state 103

   27 vars: var COMMA . vars

    IDENTIFIER  shift, and go to state 42

    $default  reduce using rule 25 (vars)

    vars  go to state 124
    var   go to state 71


state 104

   56 terms: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 117


state 105

   29 var: IDENTIFIER L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 125


state 106

   14 statements: statement SEMICOLON statements .

    $default  reduce using rule 14 (statements)


state 107

   16 statement: var ASSIGN expression .

    $default  reduce using rule 16 (statement)


state 108

   33 relation_and_expr: AND relation_expr relation_and_expr .

    $default  reduce using rule 33 (relation_and_expr)


state 109

   31 bool_expr: OR relation_and_expr bool_expr .

    $default  reduce using rule 31 (bool_expr)


state 110

   58 term: SUB terms .

    $default  reduce using rule 58 (term)


state 111

   49 expression: SUB multiplicative_expr expression .

    $default  reduce using rule 49 (expression)


state 112

   48 expression: ADD multiplicative_expr expression .

    $default  reduce using rule 48 (expression)


state 113

   51 multiplicative_expr: MULT term multiplicative_expr .

    $default  reduce using rule 51 (multiplicative_expr)


state 114

   52 multiplicative_expr: DIV term multiplicative_expr .

    $default  reduce using rule 52 (multiplicative_expr)


state 115

   53 multiplicative_expr: MOD term multiplicative_expr .

    $default  reduce using rule 53 (multiplicative_expr)


state 116

   37 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 37 (relation_expr)


state 117

   56 terms: L_PAREN expressions R_PAREN .

    $default  reduce using rule 56 (terms)


state 118

   59 term: IDENTIFIER L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 126


state 119

   17 statement: IF bool_expr THEN statements . ENDIF
   18          | IF bool_expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 127
    ELSE   shift, and go to state 128


state 120

   34 relation_expr: expressions comp expressions .

    $default  reduce using rule 34 (relation_expr)


state 121

   46 expressions: expression COMMA expressions .

    $default  reduce using rule 46 (expressions)


state 122

   19 statement: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 129


state 123

   20 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 130


state 124

   27 vars: var COMMA vars .

    $default  reduce using rule 27 (vars)


state 125

   29 var: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 29 (var)


state 126

   59 term: IDENTIFIER L_PAREN expressions R_PAREN .

    $default  reduce using rule 59 (term)


state 127

   17 statement: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 17 (statement)


state 128

   18 statement: IF bool_expr THEN statements ELSE . statements ENDIF

    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    DO          shift, and go to state 37
    CONTINUE    shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 42

    SEMICOLON  reduce using rule 15 (statement)
    $default   reduce using rule 13 (statements)

    statements  go to state 131
    statement   go to state 44
    var         go to state 45


state 129

   19 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 19 (statement)


state 130

   20 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    AND         shift, and go to state 47
    OR          shift, and go to state 48
    TRUE        shift, and go to state 49
    FALSE       shift, and go to state 50
    SUB         shift, and go to state 51
    ADD         shift, and go to state 52
    MULT        shift, and go to state 53
    DIV         shift, and go to state 54
    MOD         shift, and go to state 55
    L_PAREN     shift, and go to state 56
    NUMBER      shift, and go to state 57
    IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 44 (expressions)

    var                  go to state 59
    bool_expr            go to state 132
    relation_and_expr    go to state 61
    relation_expr        go to state 62
    expressions          go to state 63
    expression           go to state 64
    multiplicative_expr  go to state 65
    terms                go to state 66
    term                 go to state 67


state 131

   18 statement: IF bool_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 133


state 132

   20 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 20 (statement)


state 133

   18 statement: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 18 (statement)
